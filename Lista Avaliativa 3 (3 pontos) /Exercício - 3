#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <stdbool.h>

typedef struct Veiculo 
{
    char Proprietario[50];
    char Combustivel[10];
    char Modelo[50];
    char Cor[20];
    char Chassi[20];
    int Ano;
    char Placa[8];
    struct Veiculo *prox;

} Veiculo;

void inserir(Veiculo **lista, char *proprietario, char *combustivel, char *modelo, char *cor, char *chassi, int ano, char *placa) 
{
    Veiculo *novo = (Veiculo*)malloc(sizeof(Veiculo));
    strcpy(Novo->Proprietario, Proprietario);
    strcpy(Novo->Combustivel, Combustivel);
    strcpy(Novo->Modelo, Modelo);
    strcpy(Novo->Cor, Cor);
    strcpy(Novo->Chassi, Chassi);
    Novo->Ano = Ano;
    strcpy(Novo->Placa, Placa);
    Novo->prox = *Lista;
    *Lista = Novo;
}

void Listar_Diesel_2010(Veiculo *Lista) {
    while(Lista != NULL) {
        if(Lista->Ano >= 2010 && strcmp(Lista->Combustivel, "Diesel") == 0) {
            printf("Proprietario: %s\n", Lista->Proprietario);
        }
        Lista = Lista->prox;
    }
}

void Listar_Placas_j(Veiculo *Lista) 
{
    while(Lista != NULL) 
{
        if(Lista->Placa[0] == 'J' && (Lista->Placa[7] == '0' || Pista->placa[7] == '2' || Lista->Placa[7] == '4' || Lista->Placa[7] == '7')) {
            printf("Placa: %s\n", Lista->Placa);
            printf("Proprietario: %s\n", Lista->Proprietario);
        }
        Lista = Lista->prox;
    }
}

bool is_vogal(char c) {
    return c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U';
}

void Listar_Modelo_Cor_Vogal_Par(Veiculo *Lista) 
{
    while(Lista != NULL) 
{
        if(is_vogal(Lista->Placa[1])) 
{
            int Soma = 0;
            for(int i = 3; i <= 6; i++) 
{
                Soma += Lista->Placa[i] - '0';
            }
            if(Soma % 2 == 0) {
                printf("Modelo: %s\n", Lista->Modelo);
                printf("Cor: %s\n", Lista->Cor);
            }
        }
        Lista = Lista->prox;
    }
}

bool has_zero(char *str) 
{
    for(int i = 0; str[i] != '\0'; i++) 
{
        if(str[i] == '0') return true;
    }
    return false;
}

void trocar_proprietario(Veiculo *lista, char *chassi, char *novo_proprietario) 
{
    while(Lista != NULL) 
{
        if(strcmp(Lista->chassi, chassi) == 0 && !has_zero(Lista->Placa)) 
{
            strcpy(Lista->Proprietario, Novo_Proprietario);
            break;
        }
        Lista = Lista->prox;
    }
}

int main() 
{
    Veiculo *lista = NULL;
    
    while(1) 
{
        printf("\nEscolha uma opcao:\n");
        printf("1 - Inserir veiculo\n");
        printf("2 - Listar proprietarios de carros a diesel a partir de 2010\n");
        printf("3 - Listar placas que comecam com J e terminam com 0, 2, 4 ou 7\n");
        printf("4 - Listar modelo e cor de veiculos com segunda letra da placa vogal e soma dos valores numericos par\n");
        printf("5 - Trocar proprietario de um veiculo\n");
        printf("6 - Sair\n");
        
        int opcao;
        scanf("%d", &Opcao);
        
        if(Opcao == 1) 
{
            char Proprietario[50];
            char Combustivel[10];
            char Modelo[50];
            char Cor[20];
            char Chassi[20];
            int Ano;
            char Placa[8];
            
            printf("Digite o nome do proprietario: ");
            scanf(" %[^\n]s", Proprietario);
            printf("Digite o combustivel (alcool, diesel ou gasolina): ");
            scanf("%s", Combustivel);
            printf("Digite o modelo: ");
            scanf(" %[^\n]s", Modelo);
            printf("Digite a cor: ");
            scanf("%s", Cor);
            printf("Digite o numero do chassi: ");
            scanf("%s", Chassi);
            printf("Digite o ano: ");
            scanf("%d", &Ano);
            printf("Digite a placa: ");
            scanf("%s", Placa);
            
            inserir(&Lista, Proprietario, Combustivel, Modelo, Cor, Chassi, Ano, Placa);
        } else if(Opcao == 2) {
            listar_diesel_2010(Lista);
        } else if(Opcao == 3) {
            Listar_Placas_j(Lista);
        } else if(Opcao == 4) {
            Listar_Modelo_Cor_Vogal_Par(Lista);
        } else if(Opcao == 5) {
            char Chassi[20];
            char Novo_Proprietario[50];
            
            printf("Digite o numero do chassi: ");
            scanf("%s", Chassi);
            printf("Digite o nome do novo proprietario: ");
            scanf(" %[^\n]s", Novo_Proprietario);
            
            Trocar_Proprietario(Lista, Chassi, Novo_Proprietario);
        } else if(Opcao == 6) {
            break;
        }
    }
    
    return 0;
}
