#include <stdio.h>
#include <stdlib.h>

typedef struct Restaurante 
{
    char Nome[100];
    char Endereco[100];
    float Preco_Medio;
    char Comida_Servida[100];
    struct Restaurante* proximo;

} Restaurante;

Restaurante* Solicitar_Dados() 
{
    Restaurante* Novo_Restaurante = (Restaurante*)malloc(sizeof(Restaurante));

    printf("Nome do restaurante: ");
    scanf(" %[^\n]", Novo_Restaurante->Nome);

    printf("Endereco do restaurante: ");
    scanf(" %[^\n]", Novo_Restaurante->Endereco);

    printf("Preco medio: ");
    scanf("%f", &Novo_Restaurante->Preco_Medio);

    printf("Tipo de comida: ");
    scanf(" %[^\n]", Novo_Restaurante->Comida_Servida);

    Novo_Restaurante->proximo = NULL;

    return Novo_Restaurante;
}

void listadeRestaurantes(Restaurante* lista) 
{
    Restaurante* Atual = Lista;
    if (Atual == NULL) 
    {
        printf("Nao tem nenhum restaurante registrado.\n");
    } else {
        while (Atual != NULL) 
        {
            printf("Nome: %s\n", atual->nome);
            printf("Endereco: %s\n", atual->Endereco);
            printf("Preco medio: %.2f\n", atual->Preco_Medio);
            printf("Tipo de comida: %s\n", atual->Comida_Servida);
            printf("\n");

            atual = atual->proximo;
        }
    }
}

 main() 
{
    Restaurante* Lista_Restaurantes = NULL;

    int opcao;

    do {
        printf("-- Escolha uma opcao: --\n");
        printf("1 -- Adicionar um novo restaurante \t\n");
        printf("2 -- Lista de todos restaurantes \t\n");
        printf("0 -- Sair \t\n");
        printf("Dgite a Opcao que deseja ralizar : ");
        scanf("%d", &opcao);

        switch (opcao) {
            case 1: {
                Restaurante* Novo_Restaurante = Solicitar_Dados();

                if (listaRestaurantes == NULL) {
                    listaRestaurantes = Novo_Restaurante;
                } else {
                    Restaurante* atual = Lista_Restaurantes;

                    while (atual->proximo != NULL) {
                        Atual = Atual->proximo;
                    }

                    Atual->proximo = Novo_Restaurante;
                }

                printf("Restaurante novo adicionado com sucesso.\n");
                break;
            }
            case 2: {
                lista_de_Restaurantes(Lista_Restaurantes);
                break;
            }
            case 0: {
                printf("Finalizando.....\n");
                break;
            }
            default: {
                printf("Opcao inexistente.\n");
                break;
            }
        }
    } while (opcao != 0);


}
